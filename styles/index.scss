@use "sass:map";

$hue: 100;
$transparent: hsla(0, 0%, 0%, 0);
$mobile-breakpoint: "(max-width: 768px)";
$primary-light: hsl($hue, 20%, 60%);
$primary-dark: hsl($hue, 25%, 50%);
$schemes: (
    "name": "light",
    "primary": $primary-light,
    "anchor": adjust-color($primary-light, $saturation: 10%, $lightness: -25%),
    "background": hsl($hue, 10%, 98%),
    "text": hsl($hue, 10%, 25%),
  ),
  (
    "name": "dark",
    "primary": $primary-dark,
    "anchor": adjust-color($primary-dark, $saturation: 20%, $lightness: 15%),
    "background": hsl($hue, 10%, 15%),
    "text": hsl($hue, 10%, 90%),
  );

@font-face {
  font-display: swap;
  font-family: "Public Sans";
  font-style: normal;
  font-weight: 100 900;
  src: url("/static/fonts/Public_Sans/PublicSans-VariableFont_wght-subset.woff2")
    format("woff2");
}

@font-face {
  font-display: swap;
  font-family: "Public Sans";
  font-style: italic;
  font-weight: 100 900;
  src: url("/static/fonts/Public_Sans/PublicSans-Italic-VariableFont_wght-subset.woff2")
    format("woff2");
}

* {
  font: inherit;
  box-sizing: border-box;
  max-width: 100%;
  padding: 0;
  margin: 0;
}

html {
  color: var(--text-color);
  background-color: var(--background-color);
  font: 100 max(20px, 1.5vw) / 1.5 "Public Sans", system-ui, sans-serif;
  height: 100%;

  --space: 2rem;
  --space-half: 1rem;

  @media #{$mobile-breakpoint} {
    --space: 1rem;
    --space-half: 0.5rem;
  }

  @each $scheme in $schemes {
    $name: map.get($scheme, "name");
    $primary: map.get($scheme, "primary");
    $anchor: map.get($scheme, "anchor");
    $text: map.get($scheme, "text");
    $background: map.get($scheme, "background");

    @media (prefers-color-scheme: #{$name}) {
      --primary-color: $primary;
      --anchor-color: $anchor;
      --text-color: $text;
      --background-color: $background;
    }
  }
}

body {
  display: grid;
  grid-template: max-content max-content 1fr / 100%;
  justify-content: center;
  min-height: 100%;
  height: 100%;
}

h1 {
  font-weight: 800;
  font-size: 2em;
}

h2 {
  font-weight: 700;
  font-size: 1.5em;
}

h3 {
  font-weight: 600;
  font-size: 1em;
}

h1,
h2,
h3 {
  @media #{$mobile-breakpoint} {
    font-size: 1em;
  }
}

a {
  color: var(--anchor-color);
  font-weight: 200;
  text-underline-offset: 0.125em;
}

.banner {
  @each $scheme in $schemes {
    $name: map.get($scheme, "name");
    $primary: map.get($scheme, "primary");
    $background: map.get($scheme, "background");

    @media (prefers-color-scheme: #{$name}) {
      --background-color: adjust-color($primary, $alpha: -0.125);
      --gradient-color-1: adjust-color($primary, $hue: 30);
      --gradient-color-2: adjust-color($primary, $hue: -30);
      --gradient-color-3: adjust-color($background, $alpha: -0.85);
    }
  }

  &.root {
    background-color: var(--background-color);
    background-image: repeating-linear-gradient(
        45deg,
        $transparent,
        $transparent 1px,
        var(--gradient-color-3) 1px,
        var(--gradient-color-3) 5px
      ),
      linear-gradient(
        -45deg,
        var(--gradient-color-2),
        var(--gradient-color-1),
        var(--gradient-color-2)
      );
    background-attachment: fixed;
    display: grid;
    align-content: end;
    justify-items: center;
    height: 50vh;
    margin-bottom: var(--space-half);

    @media #{$mobile-breakpoint} {
      height: 25vh;
    }
  }

  &.heading {
    font-size: 2.5em;
    font-weight: 900;
    width: 100%;
    max-width: 40rem;
    padding: 0 var(--space-half);

    @media #{$mobile-breakpoint} {
      font-size: 1.5em;
    }
  }
}

.content {
  &.root {
    width: 40rem;
    max-width: 100%;
    padding: 0 var(--space-half) var(--space);
    margin: var(--space-half) auto 0;

    > * + * {
      margin-top: var(--space-half);
    }
  }
}
