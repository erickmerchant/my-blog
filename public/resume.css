* {
	box-sizing: border-box;
	font: inherit;
	margin: 0;
	max-inline-size: 100%;
	padding: 0;
}

h1,
h2,
h3 {
	font-family: "Bitter", serif;
}

h1 {
	font-size: 2rem;
	line-height: 1.125;
	font-weight: 700;
}

h2 {
	font-size: 1.25rem;
	line-height: 1;
	font-weight: 700;
}

h3 {
	font-size: 1.125rem;
	font-weight: 700;
}

a {
	color: oklch(from skyblue 50% c h);
	text-underline-offset: 0.15rem;
}

ul,
ol {
	list-style: none;
}

:root {
	background-color: var(--background-1);
	block-size: 100%;
	color: black;
	font-family: "Work Sans", sans-serif;
	font-weight: 400;
	line-height: 1.25;

	--background-1: white;
	--background-2: oklch(from linen 80% c h / 0.1);
	--background-3: oklch(from linen 80% c h / 0.3);

	@media print {
		font-size: 12px;
	}
}

.page {
	min-block-size: 100%;
	display: grid;
	justify-items: safe center;
	container-type: inline-size;
}

.layout {
	display: grid;
	gap: 1rem;
	inline-size: 100%;
	padding: 1rem;
	grid-template-columns: min-content auto;

	> :nth-child(1n + 2) {
		padding-block-start: 1rem;
	}

	@container (inline-size > 45rem) {
		display: grid;
		place-content: start;
	}

	@media print {
		padding: 0;
	}

	@media screen {
		max-inline-size: 50rem;
	}
}

.header {
	grid-column: 1 / -1;
	white-space: nowrap;
	display: grid;
	gap: 0.5rem;

	@container (inline-size > 45rem) {
		grid-template-columns: 1fr auto;
		align-items: baseline;
	}
}

.contacts {
	display: grid;
	grid-template-columns: max-content;
	column-gap: 2rem;
	row-gap: 0.5rem;

	@container (inline-size > 45rem) {
		grid-template-columns: max-content max-content;
	}
}

.objective {
	grid-column: 1 / -1;
	background: var(--background-2);
	padding: 1rem;
}

.timeline {
	display: grid;
	grid-column: 1 / -1;
	grid-template-columns: subgrid;
	gap: 1rem 2rem;

	:where(h2) {
		grid-column: 1 / -1;

		&:before {
			content: "â–‹";
			color: var(--background-3);
		}
	}

	:where(ol) {
		display: grid;
		grid-column: 1 / -1;
		grid-template-columns: subgrid;
		gap: 0.25rem 1rem;

		> * {
			display: grid;
			grid-template-columns: subgrid;
			grid-column: 1 / -1;
			padding: 1rem 0.5rem;
			background-color: var(--background);
			gap: 0.5rem 1rem;
			break-inside: avoid;

			--background: var(--background-1);
			--tag-background: var(--background-2);

			@container (inline-size > 45rem) {
				grid-column: 1 / -1;
				grid-template-rows: repeat(5, max-content) auto;
			}
		}

		> :where(:nth-child(odd)) {
			border-radius: 0.2125rem;

			--background: var(--background-2);
			--tag-background: var(--background-1);
		}

		:where(h3) {
			font-style: normal;
			white-space: nowrap;
		}
	}
}

.time {
	grid-column: 1;
	align-self: stretch;
	white-space: nowrap;
}

.organization {
	grid-column: 1;
	white-space: normal;
}

.location {
	grid-column: 1;
	white-space: normal;
	font-style: italic;
}

.tags {
	white-space: normal;
	list-style: none;
	display: flex;
	flex-wrap: wrap;
	gap: 0.5rem;
	padding-block-start: 0;
	align-content: start;
	grid-column: 2;
	grid-row: 1 / span 4;

	@container (inline-size > 45rem) {
		padding-block-start: 1rem;
		grid-column: 1;
		grid-row: auto;
	}

	:where(li) {
		background-color: var(--tag-background);
		padding: 0.125rem 0.5rem;
		border-radius: 0.25rem;
		font-size: 0.9rem;
	}
}

.summary {
	display: grid;
	row-gap: 1em;
	grid-column: 1 / -1;

	@container (inline-size > 45rem) {
		grid-column: 2;
		grid-row: 1 / -1;
	}
}

.references {
	display: grid;
	grid-column: 1 / -1;

	:where(p) {
		font-style: italic;
		grid-column: 1 / -1;
	}
}
