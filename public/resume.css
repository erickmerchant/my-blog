*,
::before,
::after {
	box-sizing: border-box;
	font: inherit;
	margin: 0;
	max-inline-size: 100%;
	padding: 0;
}

h1,
h2,
h3 {
	font-family: "Bitter", serif;
}

h1 {
	font-size: 2rem;
	line-height: 1.125;
	font-weight: 700;
}

h2 {
	font-size: 1.25rem;
	line-height: 1;
	font-weight: 700;
}

h3 {
	font-size: 1.125rem;
	font-weight: 700;

	@container (inline-size <= 45rem) {
		font-size: 1rem;
	}
}

a {
	color: oklch(from deepskyblue 50% c h);
	text-underline-offset: 0.15rem;
}

ul,
li {
	list-style: none;
}

:root {
	/* block-size: 100%; */
	color: black;
	font-family: "Work Sans", sans-serif;
	font-weight: 400;
	line-height: 1.25;

	@media print {
		font-size: 12px;
	}
}

.page {
	/* min-block-size: 100%; */
	display: grid;
	justify-items: safe center;
	max-inline-size: 100%;
	container-type: inline-size;
	padding-block: 1rem;
}

.layout {
	display: grid;
	gap: 1rem;
	inline-size: 100%;
	grid-template-columns: min-content auto;

	@media screen {
		max-inline-size: 50rem;
	}

	> * {
		padding-inline: 1rem;
	}

	> :nth-child(even) {
		padding-block: 1rem;
		background-color: oklch(from slategray 70% c h / 0.1);
		border-radius: 0.25rem;
	}
}

.header {
	grid-column: 1 / -1;
	white-space: nowrap;
	display: grid;
	gap: 0.5rem;
	/* margin-block-start: 3rem; */

	@container (inline-size > 45rem) {
		grid-template-columns: 1fr auto;
		align-items: baseline;
	}
}

.contacts {
	display: grid;
	grid-template-columns: max-content;
	column-gap: 2rem;
	row-gap: 0.5rem;

	@container (inline-size > 45rem) {
		grid-template-columns: max-content max-content;
	}
}

.objective {
	grid-column: 1 / -1;
}

.timeline {
	display: grid;
	grid-row: auto;
	grid-column: 1 / -1;
	grid-template-columns: subgrid;
	gap: 1rem;
}

.timeline-header {
	grid-column: 1 / -1;
	display: grid;
	grid-template-columns: min-content max-content auto;
	gap: 0.25rem;

	@container (inline-size <= 45rem) {
		grid-template-columns: min-content auto;
	}

	&::before {
		content: "â–‹";
		color: oklch(from slategray 70% c h / 0.5);
	}

	:where(.note) {
		font-size: 1rem;
		margin-inline-start: -0.25ex;
		text-align: right;

		@container (inline-size <= 45rem) {
			grid-row: 2;
			grid-column: 1 / -1;
			text-align: left;
		}

		&::first-letter {
			color: oklch(from slategray 70% c h / 0.8);
		}
	}
}

.timeline-items {
	display: grid;
	grid-column: 1 / -1;
	grid-template-columns: subgrid;
	gap: 1rem;

	> * {
		display: grid;
		grid-template-columns: subgrid;
		grid-column: 1 / -1;
		gap: 0.5rem;
		align-items: start;
		align-content: start;
		grid-template-areas:
			"a ."
			"c c";

		@container (inline-size > 45rem) {
			gap: 1rem;
			grid-template-areas: "a c";
		}

		&:has(.tags) {
			grid-template-areas:
				"a b"
				"c c";

			@container (inline-size > 45rem) {
				grid-template-areas:
					"a c"
					"b c"
					". c";
			}
		}
	}

	> :nth-child(1n + 2) {
		padding-block-start: 1rem;
		background-image: linear-gradient(
			oklch(from slategray 70% c h / 0.5),
			oklch(from slategray 70% c h / 0.5)
		);
		background-position: top center;
		background-size: calc(100% - 2rem) 1px;
		background-repeat: no-repeat;
	}
}

.details {
	grid-area: a;
	display: grid;
}

.title {
	font-style: normal;
	white-space: nowrap;

	&:has(.note) {
		&::first-letter {
			margin-inline-start: -0.25ex;
			color: oklch(from slategray 70% c h / 0.8);
		}
	}
}

.organization {
	white-space: normal;
}

.dates {
	white-space: nowrap;
}

.location {
	white-space: normal;
	font-style: italic;
}

.tags {
	white-space: normal;
	display: inline-flex;
	flex-wrap: wrap;
	gap: 0.5rem;
	grid-area: b;

	@container (inline-size <= 45rem) {
		align-self: self-start;
		justify-self: center;
		justify-content: center;
	}

	> * {
		background-color: oklch(from slategray 70% c h / 0.2);
		padding: 0.125rem 0.5rem;
		border-radius: 0.25rem;
		font-size: 0.9rem;
		white-space: nowrap;

		@container (inline-size <= 45rem) {
			font-size: 0.75rem;
		}
	}
}

.summary {
	grid-area: c;

	:where(li) {
		list-style: disc;
		list-style-position: outside;
		margin-inline-start: 1rem;
	}
}

.references {
	display: grid;
	grid-column: 1 / -1;

	:where(p) {
		font-style: italic;
		grid-column: 1 / -1;
	}
}
