@layer sub-page {
	code {
		font-family:
			ui-monospace, "Cascadia Code", "Source Code Pro", Menlo, Consolas,
			"DejaVu Sans Mono", monospace;
		font-size: 0.85rem;

		/* Arc iOS bug fix */
		:where(a) {
			color: inherit;
			text-decoration: none;
			pointer-events: none;
			display: contents;
		}
	}

	code-block {
		border: 0.0625em solid oklch(from var(--foreground) l c h / 0.2);
		border-radius: 0.125rem;
		counter-reset: lines 0;
		display: grid;
		overflow-x: auto;
		overflow-y: hidden;
		overscroll-behavior-x: none;
		tab-size: 2;
		grid-column: 1 / -1 !important;
		--white-space: pre-wrap;

		@container (inline-size <= 44rem) {
			border-inline: none;
			border-radius: 0;
			grid-column: 1 / -1;
			--white-space: pre;
		}

		:where(pre) {
			display: grid;
			grid-template-columns: max-content auto;
			position: relative;
			white-space: var(--white-space);
			word-break: break-word;
		}

		:where(code) {
			display: grid;
			gap: 0.25rem 1rem;
			grid-column: 1 / -1;
			grid-template-columns: subgrid;
			background-color: oklch(from currentColor l c h / 0.025);

			&::before {
				background-color: var(--background);
				background-image: linear-gradient(
					oklch(from currentColor l c h / 0.05),
					oklch(from currentColor l c h / 0.05)
				);
				content: counter(lines, decimal);
				counter-increment: lines 1;
				display: grid;
				inset-inline-start: 0;
				padding-inline: 1rem;
				position: sticky;
				text-align: right;
			}

			&:where(:first-child) {
				align-items: end;

				&::before {
					padding-block-start: 1rem;
				}
			}

			&:where(:last-child) {
				align-items: start;

				&::before {
					padding-block-end: 1rem;
				}
			}
		}

		:where(.highlight) {
			background-color: oklch(from currentColor l c h / 0.1);

			&::before {
				background-image: linear-gradient(
					oklch(from currentColor l c h / 0.2),
					oklch(from currentColor l c h / 0.2)
				);
			}
		}
	}

	.article {
		display: grid;
		grid-template-columns: subgrid;
		align-content: start;
		row-gap: 1rem;
		overflow-wrap: break-word;
		z-index: 1;
		grid-column: 2 / -2;

		> * {
			inline-size: 100%;
			margin-inline: auto;
			grid-column: 2;
		}

		@container (inline-size <= 44rem) {
			grid-column: 1 / -1;

			> * {
				grid-column: 3;
			}
		}

		:where(ul, ol) {
			padding-inline-start: 1rem;
		}

		:where(ul) {
			::marker {
				content: "- ";
				font-weight: 900;
			}
		}

		:where(:not(pre)) > :where(code) {
			background-color: oklch(from currentColor l c h / 0.05);
			padding: 0.075rem 0.25rem;
			border-radius: 0.125rem;
		}

		:where(blockquote) {
			padding-inline: 1rem;
			border-radius: 0.125rem;
			padding: 1em;
			border: 0.0625em solid oklch(from var(--foreground) l c h / 0.4);
			box-shadow: 0.5em 0.5em 0 0
				oklch(from var(--background) calc(l - 0.05) c h);

			> :where(:not(:last-child)) {
				margin-block-end: 1em;
			}

			:where(cite) {
				display: inline flex;
				gap: 0.5rem;

				&::before {
					content: "â€”";
				}
			}
		}
	}
}
