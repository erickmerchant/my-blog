*,
::before,
::after {
	box-sizing: border-box;
	color: inherit;
	font: inherit;
	margin: 0;
	max-inline-size: 100%;
	padding: 0;
	-webkit-text-size-adjust: none;
	font-weight: calc(100 * var(--weight));
}

html {
	block-size: 100%;
	color-scheme: light dark;
	font-family: Inter, Roboto, "Helvetica Neue", "Arial Nova", "Nimbus Sans",
		Arial, sans-serif;
	font-size: 125%;
	line-height: 1.5;
}

body {
	background-color: var(--background);
	block-size: 100%;
	color: var(--foreground);
	container-type: inline-size;
	display: grid;
	grid-template-columns: auto 2rem min(100% - 6rem, 40rem) 2rem auto;
	grid-template-rows: min-content auto min-content;
	overflow-x: auto;
	overscroll-behavior: none;
	scrollbar-color: currentColor var(--background);
	scrollbar-gutter: stable;
	--weight: 4;
	--border-radius: 0.125rem;
	--border-base: 0.07em;
	--border-step: 0.01em;
	--easing: ease-in-out;
	--background: light-dark(oklab(99% 0.0125 0.025), oklab(1% -0.1 -0.2));
	--foreground: light-dark(oklab(1% 0.00625 0.0125), oklab(99% -0.05 -0.1));

	> * {
		grid-column: 1 / -1;
		display: grid;
		gap: 1rem 0;
		grid-template-columns: subgrid;

		> * {
			grid-column: 3;

			@container (inline-size <=42rem) {
				grid-column: 2 / -2;
			}
		}
	}
}

a {
	text-decoration-thickness: calc(
		var(--border-base) + calc(var(--border-step) * var(--weight))
	);
	text-underline-offset: 0.15em;
	transition: text-underline-offset 0.25s 0.25s;

	&:hover,
	&:focus-visible {
		outline: none;
		text-underline-offset: 0.3em;
	}

	&:focus-visible {
		transition-delay: 0s;
	}
}

p {
	@container (inline-size <=42rem) {
		hyphens: auto;
	}
}

h1,
h2,
h3 {
	text-wrap: balance;
	line-height: 1.25;
}

h1 {
	font-size: 1.25rem;
	--weight: 9;
}

h2 {
	font-size: 1.125rem;
	--weight: 8;
}

h3,
strong {
	--weight: 7;
}

em {
	font-style: italic;
}

svg {
	block-size: 1em;
	display: block;
	fill: currentColor;
}

:where(:not(pre)) {
	> code {
		font-family: ui-monospace, "Cascadia Code", "Source Code Pro", Menlo,
			Consolas, "DejaVu Sans Mono", monospace;
	}
}

/* Arc iOS bug fix */
code {
	:where(a) {
		color: inherit;
		text-decoration: none;
		pointer-events: none;
		display: contents;
	}
}

.nav {
	font-size: clamp(1.25rem, 7cqw, 2rem);
	padding-block: 1em;
	--weight: 9;
}

.main {
	align-content: start;
	hyphens: auto;
	overflow-wrap: break-word;
	padding-block-end: 3rem;
	z-index: 1;

	> * {
		inline-size: 100%;
		margin-inline: auto;

		&:where(header) {
			display: grid;
			gap: 0.25rem;
		}
	}

	:where(ul, ol) {
		padding-inline-start: 1rem;
	}

	:where(figure:has(pre)) {
		grid-column: 2 / -2;
		border: var(--border-width) solid currentColor;
		border-radius: var(--border-radius);
		counter-reset: lines 0;
		display: grid;
		overflow-x: auto;
		overflow-y: hidden;
		overscroll-behavior-x: none;
		tab-size: 2;
		font-size: 0.85em;
		--white-space: pre-wrap;
		--border-width: calc(
			var(--border-base) + calc(var(--border-step) * var(--weight))
		);

		:where(pre) {
			display: grid;
			font-family: ui-monospace, "Cascadia Code", "Source Code Pro", Menlo,
				Consolas, "DejaVu Sans Mono", monospace;
			grid-template-columns: max-content auto;
			position: relative;
			white-space: var(--white-space);
			word-break: break-word;
		}

		:where(code) {
			display: grid;
			gap: 0.25rem 1rem;
			grid-column: 1 / -1;
			grid-template-columns: subgrid;

			&::before {
				border-inline-end: var(--border-width) solid currentColor;
				content: counter(lines, decimal);
				counter-increment: lines 1;
				display: grid;
				inset-inline-start: 0;
				padding-inline: 1rem;
				position: sticky;
				background-color: var(--background);
				text-align: right;
			}

			&:where(:first-child) {
				padding-block-start: 1rem;

				&::before {
					margin-block-start: -1rem;
					padding-block-start: 1rem;
				}
			}

			&:where(:last-child) {
				padding-block-end: 1rem;

				&::before {
					margin-block-end: -1rem;
					padding-block-end: 1rem;
				}
			}
		}

		@container (inline-size <=42rem) {
			border-inline: none;
			border-radius: 0;
			grid-column: 1 / -1;
			--white-space: pre;
		}
	}
}

.state {
	align-items: center;
	display: inline flex;
	gap: 0.5rem;
	--weight: 7;

	> * {
		flex-shrink: 0;
	}
}

.interstitial {
	border-inline-start: calc(
			var(--border-base) + calc(var(--border-step) * var(--weight))
		)
		solid currentColor;
	display: block;
	padding-block: 1rem;
	padding-inline: 1rem;
	--weight: 6;

	:where(cite) {
		display: inline flex;
		gap: 0.5rem;

		&::before {
			content: "â€”";
		}
	}
}

.footer {
	align-content: center;
	justify-content: center;
	padding-block: 1.5rem;
	--weight: 5;

	:where(ul) {
		display: grid;
		gap: 1rem 2rem;
		grid-template-columns: max-content max-content 1fr;
		justify-items: end;
		list-style: none;

		@container (inline-size <=27.5rem) {
			display: flex;
			flex-wrap: wrap;
		}
	}
}

.rss-link {
	align-items: center;
	display: flex;
	gap: 0.5rem;

	:where(svg) {
		flex-shrink: 0;
		block-size: 1.06125em;
		inline-size: 1.06125em;
		background: currentColor;
		fill: var(--background);
		padding: 0.125em;
		border-radius: var(--border-radius);
	}
}

.index {
	display: grid;
	gap: 1.25rem;
	grid-template-columns: max-content max-content auto;
	list-style: none;
	padding-inline-start: 0;
	--weight: 5;

	&,
	:where(li) {
		@container (inline-size <=42rem) {
			display: flex;
			flex-direction: column;
		}
	}

	:where(li) {
		display: grid;
		gap: 0.25rem 2rem;
		grid-column: 1 / -1;
		grid-template-columns: subgrid;

		> * {
			display: inline flex;
		}
	}
}
