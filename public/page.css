:where(:not(svg)) {
	font: inherit;
}

*,
::before,
::after {
	box-sizing: border-box;
	color: inherit;
	margin: 0;
	max-inline-size: 100%;
	padding: 0;
	-webkit-text-size-adjust: none;
	font-weight: calc(100 * var(--weight));
}

html {
	height: 100%;
	color-scheme: light dark;
	font-family: Inter, Roboto, "Helvetica Neue", "Arial Nova", "Nimbus Sans",
		Arial, sans-serif;
	font-size: 125%;
	line-height: 1.5;
	overflow-y: scroll;
	overflow-x: auto;
	scrollbar-gutter: stable;
	overscroll-behavior: none;
	scrollbar-color: currentColor var(--background);
}

body {
	min-height: 100%;
}

a {
	text-decoration-thickness: calc(
		var(--border-base) + (var(--border-step) * var(--weight))
	);
	text-underline-offset: 0.15em;
	transition: text-underline-offset 0.25s 0.25s;

	&:hover,
	&:focus-visible {
		outline: none;
		text-underline-offset: 0.3em;
	}

	&:focus-visible {
		transition-delay: 0s;
	}
}

p {
	text-wrap: pretty;

	@container (inline-size <=42rem) {
		hyphens: auto;
	}
}

h1,
h2,
h3,
h4,
h5,
h6 {
	text-wrap: balance;
}

h1,
h2 {
	line-height: 1.25;
}

h1 {
	font-size: 1.25rem;
	--weight: 9;
}

h2 {
	font-size: 1.125rem;
	--weight: 8;
}

:where(:has(nav h1)) {
	h2 {
		font-size: 1.25rem;
		--weight: 9;
	}
}

h3,
h4,
strong {
	--weight: 7;
}

em {
	font-style: italic;
}

svg {
	block-size: 1em;
	display: inline grid;
	fill: currentColor;

	:where(a) & {
		float: left;
		margin-inline-end: 0.5em;
		margin-block-start: 0.225em;
	}
}

.page {
	background-color: var(--background);
	color: var(--foreground);
	container-type: inline-size;
	display: grid;
	grid-template-columns: auto 2rem min(100% - 6rem, 40rem) 2rem auto;
	grid-template-rows: min-content auto min-content;
	row-gap: 1rem;
	--weight: 4;
	--border-radius: 0.125rem;
	--border-base: 0.1em;
	--border-step: 0.005em;
	--easing: ease-in-out;
	--background: light-dark(oklab(95% 0.025 0.05), oklab(5% -0.1 -0.2));
	--foreground: light-dark(oklab(5% 0.0125 0.025), oklab(95% -0.05 -0.1));

	> * {
		grid-column: 3;

		@container (inline-size <=42rem) {
			grid-column: 2 / -2;
		}
	}

	> :where(:nth-child(1n + 3)) {
		padding-block-start: 1rem;
		background-image: repeating-linear-gradient(
			90deg,
			transparent,
			transparent 0.125rem,
			currentColor 0.125rem,
			currentColor 1.125rem,
			transparent 1.125rem,
			transparent 1.25rem
		);
		background-position: center top;
		background-size: calc(round(down, 100%, 1.25rem) - 1.25rem) 0.125rem;
		background-repeat: no-repeat;
	}
}

.nav {
	display: grid;
	padding-block: 1rem 0;

	> * {
		line-height: 1.5;
		font-size: clamp(1.25rem, 7cqi, 2rem);
		--weight: 9;
	}
}

.status {
	display: inline flex;
	align-items: baseline;
	gap: 0.5rem;
	--weight: 7;

	> * {
		flex-shrink: 0;
	}
}

.footer {
	display: grid;
	gap: 1.5rem 0;
	font-size: 0.9rem;
	align-content: center;
	padding-block: 1rem;
	--weight: 5;

	:where(ul) {
		display: grid;
		gap: 1rem 2rem;
		grid-template-columns: max-content max-content 1fr;
		justify-items: end;
		list-style: none;

		@container (inline-size <=27.5rem) {
			display: flex;
			flex-wrap: wrap;
		}
	}

	:where(li) {
		display: grid;
	}
}

.rss-link {
	align-items: baseline;
	display: block;

	:where(svg) {
		background: currentColor;
		fill: var(--background);
		padding: 0.125em;
		border-radius: var(--border-radius);
	}
}
