@layer page {
	:where(:not(svg)) {
		font: inherit;
	}

	*,
	::before,
	::after {
		box-sizing: border-box;
		color: inherit;
		margin: 0;
		max-inline-size: 100%;
		padding: 0;
		-webkit-text-size-adjust: none;
	}

	html {
		block-size: 100%;
		color-scheme: light dark;
		font-family: system-ui, sans-serif;
		font-weight: 400;
		font-size: 125%;
		line-height: 1.5;
		overflow-y: scroll;
		overflow-x: auto;
		scrollbar-gutter: stable;
		overscroll-behavior: none;
		scrollbar-color: currentColor var(--background);

		--background: light-dark(oklch(100% 0.025 100), oklch(30% 0.075 200));
		--foreground: light-dark(oklch(30% 0.025 100), oklch(100% 0.075 200));
	}

	body {
		min-block-size: 100%;
	}

	a {
		text-decoration-thickness: 0.1em;
		text-underline-offset: 0.15em;
		text-decoration-color: oklch(from currentColor l c h / 0.5);
		transition: text-underline-offset 0.25s 0.25s;

		&:hover,
		&:focus-visible {
			outline: none;
			text-underline-offset: 0.3em;
		}

		&:focus-visible {
			transition-delay: 0s;
		}
	}

	p {
		text-wrap: pretty;

		@container (inline-size <= 44rem) {
			hyphens: auto;
		}
	}

	h1,
	h2,
	h3,
	h4,
	h5,
	h6 {
		text-wrap: balance;
	}

	h1,
	h2 {
		line-height: 1.25;
		font-weight: 900;

		:where(a) {
			text-decoration-thickness: 0.15em;
		}
	}

	h1 {
		font-size: 1.25rem;
	}

	h2 {
		font-size: 1.125rem;

		:where(:has(nav h1)) & {
			font-size: 1.25rem;
		}
	}

	h3,
	h4,
	strong {
		font-weight: 700;
	}

	em {
		font-style: italic;
	}

	del {
		color: oklch(from currentColor l c h / 0.6);
		text-decoration: line-through;
		text-decoration-thickness: 0.5em;
		text-decoration-color: oklch(from currentColor l c h / 0.4);
	}

	.page {
		background-color: var(--background);
		color: var(--foreground);
		container-type: inline-size;
		display: grid;
		grid-template-columns: auto 1rem min(100% - 2rem, 40rem) 1rem auto;
		grid-template-rows: min-content auto min-content;
		row-gap: 1rem;

		> * {
			grid-column: 3;

			@container (inline-size <= 44rem) {
				grid-column: 2 / -2;
			}
		}

		> :where(:nth-child(1n + 3)) {
			padding-block-start: 1rem;
			background-image: repeating-linear-gradient(
				90deg,
				transparent 0 0.125rem,
				oklch(from currentColor l c h / 0.7) 0.125rem 1.125rem,
				transparent 1.125rem 1.25rem
			);
			background-position: center top;
			background-size: calc(round(down, 100%, 1.25rem) - 1.25rem) 0.15rem;
			background-repeat: no-repeat;
		}
	}

	.nav {
		display: grid;
		padding-block: 1rem 0;
		grid-column: 3;

		> * {
			line-height: 1.5;
			font-size: clamp(1.25rem, 7cqi, 2rem);
			font-weight: 900;
		}
	}

	.nav-link {
		display: inline-block;
		padding-inline-end: 0.5em;
		text-decoration: none;
		position: relative;

		&:before {
			position: absolute;
			inset-block-end: 0.15em;
			inset-inline-start: -0.25em;
			inset-inline-end: -0.25em;
			content: "";
			display: block;
			block-size: 0.5em;
			background-color: oklch(from currentColor l c h / 0.2);
			transition: inset-block-end 0.25s 0.25s;
		}
	}

	.title-plus {
		display: flex;
		flex-direction: column;
		align-items: baseline;
		column-gap: 0.5em;
		row-gap: 0.125em;
		font-weight: 700;
	}

	.status {
		grid-column: 2;
		font-weight: 300;
		font-size: 0.8em;
	}

	.title-plus :where(p) {
		font-weight: 300;
		grid-column: 1 / -1;
	}

	.footer {
		display: grid;
		grid-column: 3;
		gap: 1.5rem 0;
		align-content: center;
		padding-block: 1rem;
		font-weight: 700;
	}

	.footer-list {
		display: grid;
		gap: 1rem 1rem;
		grid-template-columns: 1.1em max-content 1fr;
		justify-items: end;
		list-style: none;

		@container (inline-size <= 27.5rem) {
			display: flex;
			flex-wrap: wrap;
		}
	}

	.footer-item {
		display: grid;
	}

	.footer-link {
		text-decoration-thickness: 0.125em;
	}

	.rss-link {
		:where(svg) {
			block-size: 1.1em;
			background: oklch(from currentColor l c h / 0.2);
			box-shadow: 0.125em 0.125em 0
				oklch(from var(--background) calc(l - 0.05) c h);
			fill: var(--foreground);
			padding: 0.125em;
			border-radius: 0.125rem;
			margin-bottom: -0.2em;
		}
	}
}
